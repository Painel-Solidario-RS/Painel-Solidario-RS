name: CI
on:
  push:
    branches: ["production"]
  pull_request:
      branches: '**'

env:
  NODE_VERSION: 20.13

jobs:
  code-check:
    runs-on: ubuntu-latest
    name: ${{ matrix.check == 'ts' && 'TypeScript' || 'Code Lint' }}

    strategy:
      fail-fast: false
      matrix:
        check: ['ts', 'lint']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-modules: true
          install: true

      - name: Code Lint
        if: matrix.check == 'lint'
        run: |
          npm run lint

      - name: Code TypeCheck
        if: matrix.check == 'ts'
        run: |
          npm run typecheck

  test-api:
    name: "API Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-modules: true
          install: true

      - name: Run tests
        run: |
          cd apps/api
          npm test

  test-web:
    name: "Web Tests"
    runs-on: ubuntu-latest
    # runs-on: macos-latest-large

    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox, edge]
        # browser: [chrome, firefox, edge, webkit] #webkit is only available on macOS and emulates Safari

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-modules: true
          install: true

      - name: Run tests
        uses: cypress-io/github-action@v6
        with:
          project: ./apps/web
          browser: ${{ matrix.browser }}
          group: ${{ runner.os }}/${{ matrix.browser }}
          record: true
          parallel: true
          cache-key: node-${{ matrix.browser }}-on-${{ runner.os }}
        env:
          CYPRESS_RECORD_KEY: faf1cd67-9203-460d-a8bb-b1967f65e337
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-container:
    name: "Build container"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Compose Build
        run: |
          cd apps/api
          docker compose build

  deploy:
    name: "Deploy app"
    runs-on: [self-hosted, production, painel-solidario-rs]
    needs: [test-api, test-web, build-container]
    if: github.ref == 'refs/heads/production'
    # if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Compose - Update Web
        run: |
          cd apps/web
          docker compose up --build -d

      - name: Docker Compose - Update API
        run: |
          cd apps/api
          docker compose up --build -d
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
          NODE_ENV: ${{ vars.NODE_ENV }}